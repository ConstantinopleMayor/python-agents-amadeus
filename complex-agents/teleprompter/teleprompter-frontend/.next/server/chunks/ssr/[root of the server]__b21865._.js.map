{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/ui/button.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes, ReactNode } from \"react\";\n\nexport type ButtonProps = {\n  children: ReactNode;\n  className?: string;\n  disabled?: boolean;\n  state?: \"primary\" | \"secondary\" | \"dropdown\" | \"destructive\";\n  size?: \"small\" | \"medium\" | \"large\";\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nexport function Button({\n  children,\n  className,\n  disabled,\n  ...allProps\n}: ButtonProps) {\n  return (\n    <button\n      className={`flex flex-row ${\n        disabled ? \"pointer-events-none\" : \"\"\n      } bg-transparent hover:bg-white/10 text-white rounded-[4px] border active:translate-y-[2px] active:scale-[0.99] duration-250 border-white/20 text-base px-3 py-1 transition-all ease-out duration-250 ${className}`}\n      {...allProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport function LoadingSVG({\n  diameter = 20,\n  strokeWidth = 4,\n}: {\n  diameter?: number;\n  strokeWidth?: number;\n}) {\n  return (\n    <svg\n      className=\"animate-spin\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n      style={{\n        width: `${diameter}px`,\n        height: `${diameter}px`,\n      }}\n    >\n      <circle\n        className=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        strokeWidth={strokeWidth}\n      ></circle>\n      <path\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      ></path>\n    </svg>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAUO,SAAS,OAAO,EACrB,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,GAAG,UACS;IACZ,qBACE,6WAAC;QACC,WAAW,CAAC,cAAc,EACxB,WAAW,wBAAwB,GACpC,qMAAqM,EAAE,WAAW;QAClN,GAAG,QAAQ;kBAEX;;;;;;AAGP;AAEO,SAAS,WAAW,EACzB,WAAW,EAAE,EACb,cAAc,CAAC,EAIhB;IACC,qBACE,6WAAC;QACC,WAAU;QACV,MAAK;QACL,SAAQ;QACR,OAAO;YACL,OAAO,GAAG,SAAS,EAAE,CAAC;YACtB,QAAQ,GAAG,SAAS,EAAE,CAAC;QACzB;;0BAEA,6WAAC;gBACC,WAAU;gBACV,IAAG;gBACH,IAAG;gBACH,GAAE;gBACF,QAAO;gBACP,aAAa;;;;;;0BAEf,6WAAC;gBACC,MAAK;gBACL,GAAE;;;;;;;;;;;;AAIV"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/visualization/multiband.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ntype VisualizerState = \"listening\" | \"idle\" | \"speaking\" | \"thinking\";\ntype AgentMultibandAudioVisualizerProps = {\n  state: VisualizerState;\n  barWidth: number;\n  minBarHeight: number;\n  maxBarHeight: number;\n  accentColor: string;\n  accentShade?: number;\n  frequencies: Float32Array[] | number[][];\n  borderRadius: number;\n  gap: number;\n};\n\nexport const MultibandAudioVisualizer = ({\n  state,\n  barWidth,\n  minBarHeight,\n  maxBarHeight,\n  frequencies,\n  borderRadius,\n  gap,\n}: AgentMultibandAudioVisualizerProps) => {\n  const summedFrequencies = frequencies.map((bandFrequencies) => {\n    const sum = (bandFrequencies as number[]).reduce((a, b) => a + b, 0);\n    return Math.sqrt(sum / bandFrequencies.length);\n  });\n\n  const [thinkingIndex, setThinkingIndex] = useState(\n    Math.floor(summedFrequencies.length / 2)\n  );\n  const [thinkingDirection, setThinkingDirection] = useState<\"left\" | \"right\">(\n    \"right\"\n  );\n\n  useEffect(() => {\n    if (state !== \"thinking\") {\n      setThinkingIndex(Math.floor(summedFrequencies.length / 2));\n      return;\n    }\n    const timeout = setTimeout(() => {\n      if (thinkingDirection === \"right\") {\n        if (thinkingIndex === summedFrequencies.length - 1) {\n          setThinkingDirection(\"left\");\n          setThinkingIndex((prev) => prev - 1);\n        } else {\n          setThinkingIndex((prev) => prev + 1);\n        }\n      } else {\n        if (thinkingIndex === 0) {\n          setThinkingDirection(\"right\");\n          setThinkingIndex((prev) => prev + 1);\n        } else {\n          setThinkingIndex((prev) => prev - 1);\n        }\n      }\n    }, 200);\n\n    return () => clearTimeout(timeout);\n  }, [state, summedFrequencies.length, thinkingDirection, thinkingIndex]);\n\n  return (\n    <div\n      className={`flex flex-row items-center`}\n      style={{\n        gap: gap + \"px\",\n      }}\n    >\n      {summedFrequencies.map((frequency, index) => {\n        const isCenter = index === Math.floor(summedFrequencies.length / 2);\n        let transform;\n\n        return (\n          <div\n            className={`bg-white ${\n              isCenter && state === \"listening\" ? \"animate-pulse\" : \"\"\n            }`}\n            key={\"frequency-\" + index}\n            style={{\n              height:\n                minBarHeight + frequency * (maxBarHeight - minBarHeight) + \"px\",\n              width: barWidth + \"px\",\n              transition:\n                \"background-color 0.35s ease-out, transform 0.25s ease-out\",\n              transform: transform,\n              borderRadius: borderRadius + \"px\",\n              boxShadow:\n                state !== \"idle\"\n                  ? `${0.1 * barWidth}px ${\n                      0.1 * barWidth\n                    }px 0px 0px rgba(0, 0, 0, 0.1)`\n                  : \"none\",\n            }}\n          ></div>\n        );\n      })}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAeO,MAAM,2BAA2B,CAAC,EACvC,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,YAAY,EACZ,WAAW,EACX,YAAY,EACZ,GAAG,EACgC;IACnC,MAAM,oBAAoB,YAAY,GAAG,CAAC,CAAC;QACzC,MAAM,MAAM,AAAC,gBAA6B,MAAM,CAAC,CAAC,GAAG,IAAM,IAAI,GAAG;QAClE,OAAO,KAAK,IAAI,CAAC,MAAM,gBAAgB,MAAM;IAC/C;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAC/C,KAAK,KAAK,CAAC,kBAAkB,MAAM,GAAG;IAExC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EACvD;IAGF,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,UAAU,YAAY;YACxB,iBAAiB,KAAK,KAAK,CAAC,kBAAkB,MAAM,GAAG;YACvD;QACF;QACA,MAAM,UAAU,WAAW;YACzB,IAAI,sBAAsB,SAAS;gBACjC,IAAI,kBAAkB,kBAAkB,MAAM,GAAG,GAAG;oBAClD,qBAAqB;oBACrB,iBAAiB,CAAC,OAAS,OAAO;gBACpC,OAAO;oBACL,iBAAiB,CAAC,OAAS,OAAO;gBACpC;YACF,OAAO;gBACL,IAAI,kBAAkB,GAAG;oBACvB,qBAAqB;oBACrB,iBAAiB,CAAC,OAAS,OAAO;gBACpC,OAAO;oBACL,iBAAiB,CAAC,OAAS,OAAO;gBACpC;YACF;QACF,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC;QAAO,kBAAkB,MAAM;QAAE;QAAmB;KAAc;IAEtE,qBACE,6WAAC;QACC,WAAW,CAAC,0BAA0B,CAAC;QACvC,OAAO;YACL,KAAK,MAAM;QACb;kBAEC,kBAAkB,GAAG,CAAC,CAAC,WAAW;YACjC,MAAM,WAAW,UAAU,KAAK,KAAK,CAAC,kBAAkB,MAAM,GAAG;YACjE,IAAI;YAEJ,qBACE,6WAAC;gBACC,WAAW,CAAC,SAAS,EACnB,YAAY,UAAU,cAAc,kBAAkB,IACtD;gBAEF,OAAO;oBACL,QACE,eAAe,YAAY,CAAC,eAAe,YAAY,IAAI;oBAC7D,OAAO,WAAW;oBAClB,YACE;oBACF,WAAW;oBACX,cAAc,eAAe;oBAC7B,WACE,UAAU,SACN,GAAG,MAAM,SAAS,GAAG,EACnB,MAAM,SACP,6BAA6B,CAAC,GAC/B;gBACR;eAfK,eAAe;;;;;QAkB1B;;;;;;AAGN"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/device-selector.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useMediaDeviceSelect } from \"@livekit/components-react\";\nimport { ChevronDown } from \"lucide-react\";\n\ntype DeviceSelectorProps = {\n  kind: MediaDeviceKind;\n};\n\nexport const DeviceSelector = ({ kind }: DeviceSelectorProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const deviceSelect = useMediaDeviceSelect({ kind: kind });\n  const [selectedDeviceName, setSelectedDeviceName] = useState(\"\");\n\n  useEffect(() => {\n    deviceSelect.devices.forEach((device) => {\n      if (device.deviceId === deviceSelect.activeDeviceId) {\n        setSelectedDeviceName(device.label);\n      }\n    });\n  }, [deviceSelect.activeDeviceId, deviceSelect.devices, selectedDeviceName]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      void event;\n      if (showMenu) {\n        setShowMenu(false);\n      }\n    };\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, [showMenu]);\n\n  const activeClassName = showMenu ? \"rotate-180\" : \"rotate-0\";\n\n  return (\n    <div className=\"relative\">\n      <button\n        className={`flex hover:opacity-50 ${activeClassName} transition-all duration-100`}\n        onClick={(e) => {\n          setShowMenu(!showMenu);\n          e.stopPropagation();\n        }}\n      >\n        <ChevronDown className=\"w-4 h-4 text-accent-text\" />\n      </button>\n      <div\n        className=\"absolute bg-accent-bg left-0 bottom-8 text-[#424049] text-left border-white/20 border-[1px] box-border rounded-[5px] z-10 w-[280px]\"\n        style={{\n          display: showMenu ? \"block\" : \"none\",\n        }}\n      >\n        {deviceSelect.devices.map((device, index) => {\n          const isFirst = index === 0;\n          const isLast = index === deviceSelect.devices.length - 1;\n\n          let roundedStyles = \"\";\n          if (isFirst) {\n            roundedStyles = \" rounded-t-[5px]\";\n          } else if (isLast) {\n            roundedStyles = \" rounded-b-[5px]\";\n          }\n\n          return (\n            <div\n              onClick={(e) => {\n                e.stopPropagation();\n                deviceSelect.setActiveMediaDevice(device.deviceId);\n                setShowMenu(false);\n              }}\n              className={`${device.deviceId === deviceSelect.activeDeviceId\n                ? \"text-white\"\n                : \"text-white\"\n                }  text-xs py-2 px-2 cursor-pointer hover:bg-white/10 ${roundedStyles}`}\n              key={index}\n            >\n              {device.label}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAMO,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAuB;IAC1D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,eAAe,CAAA,GAAA,qaAAA,CAAA,uBAAoB,AAAD,EAAE;QAAE,MAAM;IAAK;IACvD,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAE7D,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,OAAO,QAAQ,KAAK,aAAa,cAAc,EAAE;gBACnD,sBAAsB,OAAO,KAAK;YACpC;QACF;IACF,GAAG;QAAC,aAAa,cAAc;QAAE,aAAa,OAAO;QAAE;KAAmB;IAE1E,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,qBAAqB,CAAC;YAC1B,KAAK;YACL,IAAI,UAAU;gBACZ,YAAY;YACd;QACF;QACA,SAAS,gBAAgB,CAAC,SAAS;QACnC,OAAO;YACL,SAAS,mBAAmB,CAAC,SAAS;QACxC;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,kBAAkB,WAAW,eAAe;IAElD,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBACC,WAAW,CAAC,sBAAsB,EAAE,gBAAgB,4BAA4B,CAAC;gBACjF,SAAS,CAAC;oBACR,YAAY,CAAC;oBACb,EAAE,eAAe;gBACnB;0BAEA,cAAA,6WAAC,wSAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;0BAEzB,6WAAC;gBACC,WAAU;gBACV,OAAO;oBACL,SAAS,WAAW,UAAU;gBAChC;0BAEC,aAAa,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ;oBACjC,MAAM,UAAU,UAAU;oBAC1B,MAAM,SAAS,UAAU,aAAa,OAAO,CAAC,MAAM,GAAG;oBAEvD,IAAI,gBAAgB;oBACpB,IAAI,SAAS;wBACX,gBAAgB;oBAClB,OAAO,IAAI,QAAQ;wBACjB,gBAAgB;oBAClB;oBAEA,qBACE,6WAAC;wBACC,SAAS,CAAC;4BACR,EAAE,eAAe;4BACjB,aAAa,oBAAoB,CAAC,OAAO,QAAQ;4BACjD,YAAY;wBACd;wBACA,WAAW,GAAG,OAAO,QAAQ,KAAK,aAAa,cAAc,GACzD,eACA,aACD,qDAAqD,EAAE,eAAe;kCAGxE,OAAO,KAAK;uBAFR;;;;;gBAKX;;;;;;;;;;;;AAIR"}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/microphone-button.tsx"],"sourcesContent":["import { TrackToggle, useLocalParticipant } from \"@livekit/components-react\";\nimport { Track } from \"livekit-client\";\nimport { MultibandAudioVisualizer } from \"@/components/visualization/multiband\";\nimport { DeviceSelector } from \"@/components/device-selector\";\nimport { useEffect, useState } from \"react\";\nimport { Mic, MicOff } from \"lucide-react\";\n\ntype MicrophoneButtonProps = {\n  localMultibandVolume: Float32Array[];\n  isSpaceBarEnabled?: boolean;\n};\nexport const MicrophoneButton = ({\n  localMultibandVolume,\n  isSpaceBarEnabled = false,\n}: MicrophoneButtonProps) => {\n  const { localParticipant } = useLocalParticipant();\n  const [isMuted, setIsMuted] = useState(localParticipant.isMicrophoneEnabled);\n  const [isSpaceBarPressed, setIsSpaceBarPressed] = useState(false);\n\n  useEffect(() => {\n    setIsMuted(localParticipant.isMicrophoneEnabled === false);\n  }, [localParticipant.isMicrophoneEnabled]);\n\n  useEffect(() => {\n    if (!isSpaceBarEnabled) return;\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.code === \"Space\") {\n        localParticipant.setMicrophoneEnabled(true);\n        setIsSpaceBarPressed(true);\n      }\n    };\n\n    const handleKeyUp = (event: KeyboardEvent) => {\n      if (event.code === \"Space\") {\n        localParticipant.setMicrophoneEnabled(false);\n        setIsSpaceBarPressed(false);\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    window.addEventListener(\"keyup\", handleKeyUp);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"keyup\", handleKeyUp);\n    };\n  }, [isSpaceBarEnabled, localParticipant]);\n\n  return (\n    <div\n      className={`flex items-center justify-center gap-2 px-2 py-[6px] bg-transparent rounded text-white border border-white/20 hover:bg-white/10 active:translate-y-[2px] active:scale-[0.99] transition-all ease-out duration-250 ${\n        isSpaceBarPressed ? \"scale-90 border-white/20-text border\" : \"scale-100\"\n      }`}\n    >\n      <TrackToggle\n        source={Track.Source.Microphone}\n        className={\n          \"flex items-center justify-center gap-2 h-full \" +\n          (isMuted ? \"opacity-50\" : \"\")\n        }\n        showIcon={false}\n      >\n        {isMuted ? (\n          <MicOff className=\"w-4 h-4 text-white\" />\n        ) : (\n          <Mic className=\"w-4 h-4 text-white\" />\n        )}\n        <MultibandAudioVisualizer\n          state=\"speaking\"\n          barWidth={2}\n          minBarHeight={2}\n          maxBarHeight={16}\n          accentColor={\"white\"}\n          accentShade={950}\n          frequencies={localMultibandVolume}\n          borderRadius={5}\n          gap={2}\n        />\n      </TrackToggle>\n      <DeviceSelector kind=\"audioinput\" />\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;AAAA;AAKA;AAAA;;;;;;;;AAMO,MAAM,mBAAmB,CAAC,EAC/B,oBAAoB,EACpB,oBAAoB,KAAK,EACH;IACtB,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,oaAAA,CAAA,sBAAmB,AAAD;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE,iBAAiB,mBAAmB;IAC3E,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAE3D,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,WAAW,iBAAiB,mBAAmB,KAAK;IACtD,GAAG;QAAC,iBAAiB,mBAAmB;KAAC;IAEzC,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,mBAAmB;QACxB,MAAM,gBAAgB,CAAC;YACrB,IAAI,MAAM,IAAI,KAAK,SAAS;gBAC1B,iBAAiB,oBAAoB,CAAC;gBACtC,qBAAqB;YACvB;QACF;QAEA,MAAM,cAAc,CAAC;YACnB,IAAI,MAAM,IAAI,KAAK,SAAS;gBAC1B,iBAAiB,oBAAoB,CAAC;gBACtC,qBAAqB;YACvB;QACF;QACA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,gBAAgB,CAAC,SAAS;QACjC,OAAO;YACL,OAAO,mBAAmB,CAAC,WAAW;YACtC,OAAO,mBAAmB,CAAC,SAAS;QACtC;IACF,GAAG;QAAC;QAAmB;KAAiB;IAExC,qBACE,6WAAC;QACC,WAAW,CAAC,kNAAkN,EAC5N,oBAAoB,yCAAyC,aAC7D;;0BAEF,6WAAC,iaAAA,CAAA,cAAW;gBACV,QAAQ,oOAAA,CAAA,QAAK,CAAC,MAAM,CAAC,UAAU;gBAC/B,WACE,mDACA,CAAC,UAAU,eAAe,EAAE;gBAE9B,UAAU;;oBAET,wBACC,6WAAC,8RAAA,CAAA,SAAM;wBAAC,WAAU;;;;;6CAElB,6WAAC,oRAAA,CAAA,MAAG;wBAAC,WAAU;;;;;;kCAEjB,6WAAC,yIAAA,CAAA,2BAAwB;wBACvB,OAAM;wBACN,UAAU;wBACV,cAAc;wBACd,cAAc;wBACd,aAAa;wBACb,aAAa;wBACb,aAAa;wBACb,cAAc;wBACd,KAAK;;;;;;;;;;;;0BAGT,6WAAC,iIAAA,CAAA,iBAAc;gBAAC,MAAK;;;;;;;;;;;;AAG3B"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/hooks/use-track-volume.ts"],"sourcesContent":["import { Track } from \"livekit-client\";\nimport { useEffect, useState } from \"react\";\n\nexport const useTrackVolume = (track?: Track) => {\n  const [volume, setVolume] = useState(0);\n  useEffect(() => {\n    if (!track || !track.mediaStream) {\n      return;\n    }\n\n    const ctx = new AudioContext();\n    const source = ctx.createMediaStreamSource(track.mediaStream);\n    const analyser = ctx.createAnalyser();\n    analyser.fftSize = 32;\n    analyser.smoothingTimeConstant = 0;\n    source.connect(analyser);\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n\n    const updateVolume = () => {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        const a = dataArray[i];\n        sum += a * a;\n      }\n      setVolume(Math.sqrt(sum / dataArray.length) / 255);\n    };\n\n    const interval = setInterval(updateVolume, 1000 / 30);\n\n    return () => {\n      source.disconnect();\n      clearInterval(interval);\n    };\n  }, [track, track?.mediaStream]);\n\n  return volume;\n};\n\nconst normalizeFrequencies = (frequencies: Float32Array) => {\n  const normalizeDb = (value: number) => {\n    const minDb = -100;\n    const maxDb = -10;\n    let db = 1 - (Math.max(minDb, Math.min(maxDb, value)) * -1) / 100;\n    db = Math.sqrt(db);\n\n    return db;\n  };\n\n  // Normalize all frequency values\n  return frequencies.map((value) => {\n    if (value === -Infinity) {\n      return 0;\n    }\n    return normalizeDb(value);\n  });\n};\n\nexport const useMultibandTrackVolume = (\n  track?: Track,\n  bands: number = 5,\n  loPass: number = 100,\n  hiPass: number = 600,\n) => {\n  const [frequencyBands, setFrequencyBands] = useState<Float32Array[]>([]);\n\n  useEffect(() => {\n    if (!track || !track.mediaStream) {\n      return;\n    }\n\n    const ctx = new AudioContext();\n    const source = ctx.createMediaStreamSource(track.mediaStream);\n    const analyser = ctx.createAnalyser();\n    analyser.fftSize = 2048;\n    source.connect(analyser);\n\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Float32Array(bufferLength);\n\n    const updateVolume = () => {\n      analyser.getFloatFrequencyData(dataArray);\n      let frequencies: Float32Array = new Float32Array(dataArray.length);\n      for (let i = 0; i < dataArray.length; i++) {\n        frequencies[i] = dataArray[i];\n      }\n      frequencies = frequencies.slice(loPass, hiPass);\n\n      const normalizedFrequencies = normalizeFrequencies(frequencies);\n      const chunkSize = Math.ceil(normalizedFrequencies.length / bands);\n      const chunks: Float32Array[] = [];\n      for (let i = 0; i < bands; i++) {\n        chunks.push(\n          normalizedFrequencies.slice(i * chunkSize, (i + 1) * chunkSize),\n        );\n      }\n\n      setFrequencyBands(chunks);\n    };\n\n    const interval = setInterval(updateVolume, 10);\n\n    return () => {\n      source.disconnect();\n      clearInterval(interval);\n    };\n  }, [track, track?.mediaStream, loPass, hiPass, bands]);\n\n  return frequencyBands;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 476, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/teleprompter.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ConnectionState, RpcInvocationData } from \"livekit-client\";\nimport { useConnectionState, useMaybeRoomContext } from \"@livekit/components-react\";\nimport { Button } from \"@/components/ui/button\";\n\nexport interface TeleprompterProps {\n  typingSpeed?: number;\n}\n\nconst DEFAULT_SCRIPT = `Welcome to the teleprompter demo!\n\nThis is where you can type your script. When you switch to teleprompter mode and start speaking, the text will automatically scroll based on what you say.\n\nTry reading this text aloud and watch as the teleprompter follows along with your speech. The system will match your spoken words to the text and automatically scroll to keep up with your pace.\n\nYou can edit this text in edit mode, then switch to teleprompter mode to use it as your script.`;\n\nexport function Teleprompter({ typingSpeed = 50 }: TeleprompterProps) {\n  const [isEditMode, setIsEditMode] = useState<boolean>(true);\n  const [scriptText, setScriptText] = useState<string>(DEFAULT_SCRIPT);\n  const [currentSentenceIndex, setCurrentSentenceIndex] = useState<number>(0);\n  const [sentences, setSentences] = useState<string[]>([]);\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const highlightedSentenceRef = useRef<HTMLDivElement>(null);\n  const state = useConnectionState();\n  const room = useMaybeRoomContext();\n\n  // Split text into sentences when script changes\n  useEffect(() => {\n    // Split by sentence endings but preserve the structure\n    const parts: Array<{text: string, isSentence: boolean}> = [];\n    let lastIndex = 0;\n    \n    // Match sentences but keep track of positions\n    const sentenceRegex = /[^.!?\\n]+[.!?]+/g;\n    let match;\n    \n    while ((match = sentenceRegex.exec(scriptText)) !== null) {\n      // Add any non-sentence content before this sentence (like newlines)\n      if (match.index > lastIndex) {\n        const betweenText = scriptText.substring(lastIndex, match.index);\n        if (betweenText.trim() || betweenText.includes('\\n')) {\n          parts.push({ text: betweenText, isSentence: false });\n        }\n      }\n      \n      // Add the sentence\n      parts.push({ text: match[0].trim(), isSentence: true });\n      lastIndex = match.index + match[0].length;\n    }\n    \n    // Add any remaining content\n    if (lastIndex < scriptText.length) {\n      const remaining = scriptText.substring(lastIndex);\n      if (remaining.trim() || remaining.includes('\\n')) {\n        parts.push({ text: remaining, isSentence: false });\n      }\n    }\n    \n    // Extract just the sentences for matching, but keep the parts for rendering\n    const sentenceTexts = parts.filter(p => p.isSentence).map(p => p.text);\n    setSentences(sentenceTexts);\n    \n    // Store the full parts structure for rendering\n    (window as any).__teleprompterParts = parts;\n  }, [scriptText]);\n\n  // Scroll to current sentence when it changes or when entering teleprompter mode\n  useEffect(() => {\n    if (!isEditMode && currentSentenceIndex >= 0) {\n      // Add a small delay when first entering teleprompter mode\n      const timeoutId = setTimeout(() => {\n        scrollToSentence(currentSentenceIndex);\n      }, 100);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [currentSentenceIndex, isEditMode]);\n\n  // Register RPC handler for receiving transcripts\n  useEffect(() => {\n    if (!room || !room.localParticipant) return;\n\n    const handleReceiveTranscript = async (rpcInvocation: RpcInvocationData): Promise<string> => {\n      try {\n        // Parse the payload (it comes as a JSON string from Python)\n        const payload = JSON.parse(rpcInvocation.payload);\n        \n        if (payload && payload.transcript) {\n          // Find which sentence matches the transcript\n          const matchingSentenceIndex = findMatchingSentence(sentences, payload.transcript, currentSentenceIndex);\n          if (matchingSentenceIndex >= 0) {\n            // Move to the NEXT sentence after the one that was spoken\n            const nextSentenceIndex = matchingSentenceIndex + 1;\n            if (nextSentenceIndex < sentences.length && nextSentenceIndex !== currentSentenceIndex) {\n              setCurrentSentenceIndex(nextSentenceIndex);\n              scrollToSentence(nextSentenceIndex);\n            }\n          }\n          return \"Success: Transcript processed\";\n        } else {\n          return \"Error: Invalid transcript data format\";\n        }\n      } catch (error) {\n        return \"Error: \" + (error instanceof Error ? error.message : String(error));\n      }\n    };\n\n    room.localParticipant.registerRpcMethod(\"receive_transcript\", handleReceiveTranscript);\n\n    return () => {\n      if (room && room.localParticipant) {\n        room.localParticipant.unregisterRpcMethod(\"receive_transcript\");\n      }\n    };\n  }, [room, sentences, currentSentenceIndex]);\n\n  const findMatchingSentence = (sentences: string[], transcript: string, currentIndex: number): number => {\n    const lowerTranscript = transcript.toLowerCase().trim();\n    \n    // First check if we're still in the current sentence\n    if (currentIndex < sentences.length) {\n      const currentSentence = sentences[currentIndex].toLowerCase();\n      if (currentSentence.includes(lowerTranscript) || lowerTranscript.includes(currentSentence)) {\n        return currentIndex;\n      }\n    }\n    \n    // Check the next sentence\n    if (currentIndex + 1 < sentences.length) {\n      const nextSentence = sentences[currentIndex + 1].toLowerCase();\n      // Check if transcript contains significant portion of next sentence\n      const words = nextSentence.split(/\\s+/).filter(w => w.length > 2);\n      const matchingWords = words.filter(word => lowerTranscript.includes(word));\n      \n      if (matchingWords.length >= Math.min(3, words.length * 0.5)) {\n        return currentIndex + 1;\n      }\n    }\n    \n    // Fallback: search all sentences for best match\n    let bestMatch = -1;\n    let bestScore = 0;\n    \n    sentences.forEach((sentence, index) => {\n      const lowerSentence = sentence.toLowerCase();\n      const words = lowerSentence.split(/\\s+/).filter(w => w.length > 2);\n      const matchingWords = words.filter(word => lowerTranscript.includes(word));\n      const score = matchingWords.length / words.length;\n      \n      if (score > bestScore && score > 0.5) {\n        bestScore = score;\n        bestMatch = index;\n      }\n    });\n    \n    return bestMatch;\n  };\n\n  const scrollToSentence = (sentenceIndex: number) => {\n    // Use setTimeout to ensure DOM has updated\n    setTimeout(() => {\n      if (highlightedSentenceRef.current && containerRef.current) {\n        const container = containerRef.current;\n        const highlighted = highlightedSentenceRef.current;\n        \n        // Get the container's visible height and the highlighted element's position\n        const containerHeight = container.clientHeight;\n        const containerScrollTop = container.scrollTop;\n        const highlightedOffsetTop = highlighted.offsetTop;\n        const highlightedHeight = highlighted.clientHeight;\n        \n        // Calculate the center position of the container\n        const containerCenter = containerHeight / 2;\n        \n        // Calculate where to scroll so the highlighted element is centered\n        const targetScrollTop = highlightedOffsetTop - containerCenter + (highlightedHeight / 2);\n        \n        container.scrollTo({\n          top: Math.max(0, targetScrollTop),\n          behavior: 'smooth'\n        });\n      }\n    }, 50); // Slightly longer delay to ensure DOM is ready\n  };\n\n  const handleModeToggle = () => {\n    setIsEditMode(!isEditMode);\n    if (isEditMode) {\n      // When entering teleprompter mode, reset to first sentence\n      setCurrentSentenceIndex(0);\n      // The useEffect will handle scrolling automatically\n    }\n  };\n\n  const renderHighlightedText = () => {\n    const parts = (window as any).__teleprompterParts || [];\n    let sentenceIndex = 0;\n    \n    return (\n      <div className=\"whitespace-pre-wrap font-mono text-lg leading-8 p-3 relative\">\n        {/* Add padding to allow first sentence to be centered */}\n        <div className=\"h-[18vh]\" />\n        {parts.map((part: {text: string, isSentence: boolean}, index: number) => {\n          if (part.isSentence) {\n            const currentIdx = sentenceIndex;\n            sentenceIndex++;\n            return (\n              <span\n                key={index}\n                ref={currentIdx === currentSentenceIndex ? highlightedSentenceRef : null}\n                className={`inline-block ${currentIdx === currentSentenceIndex ? 'bg-white/10 text-white px-2 py-1 rounded' : 'text-white/50'} transition-all duration-300`}\n              >\n                {part.text}\n              </span>\n            );\n          } else {\n            // Render non-sentence content (like newlines) as-is\n            return (\n              <span key={index} className=\"text-white/50\">\n                {part.text}\n              </span>\n            );\n          }\n        })}\n        {/* Add padding to allow last sentences to be centered */}\n        <div className=\"h-[18vh]\" />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"relative h-full flex flex-col\">\n      <div className=\"flex justify-between items-center p-3 border-b border-white/20\">\n        <h2 className=\"text-lg font-semibold\">\n          {isEditMode ? \"Edit Mode\" : \"Teleprompter Mode\"}\n        </h2>\n        <Button\n          onClick={handleModeToggle}\n          className=\"px-4 py-2\"\n          state={state === ConnectionState.Connected || isEditMode ? \"primary\" : \"default\"}\n          disabled={state !== ConnectionState.Connected && !isEditMode}\n        >\n          {isEditMode ? \"Switch to Teleprompter\" : \"Switch to Edit\"}\n        </Button>\n      </div>\n      \n      <div className=\"flex-1 overflow-hidden relative\">\n        <AnimatePresence mode=\"wait\">\n          {isEditMode ? (\n            <motion.div\n              key=\"edit\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"h-full\"\n            >\n              <textarea\n                ref={textAreaRef}\n                value={scriptText}\n                onChange={(e) => setScriptText(e.target.value)}\n                className=\"w-full h-full p-3 bg-transparent text-white font-mono text-lg leading-7 resize-none focus:outline-none\"\n                placeholder=\"Type your script here...\"\n              />\n            </motion.div>\n          ) : (\n            <motion.div\n              key=\"teleprompter\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"h-full relative\"\n            >\n              <div className=\"h-full overflow-y-auto\" ref={containerRef}>\n                {renderHighlightedText()}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n        \n        {!isEditMode && state !== ConnectionState.Connected && (\n          <div className=\"absolute inset-0 bg-black/50 flex items-center justify-center\">\n            <p className=\"text-white/60 text-center max-w-md\">\n              Connect to start using the teleprompter. Your speech will be matched to the script and it will auto-scroll.\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 847, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 853, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/playground.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo } from \"react\";\nimport {\n  useConnectionState,\n  useLocalParticipant,\n  useTracks,\n} from \"@livekit/components-react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { ConnectionState, LocalParticipant, Track } from \"livekit-client\";\n\nimport { Button, LoadingSVG } from \"@/components/ui/button\";\nimport { MicrophoneButton } from \"@/components/microphone-button\";\nimport { useMultibandTrackVolume } from \"@/hooks/use-track-volume\";\nimport { Teleprompter } from \"./teleprompter\";\n\nexport interface PlaygroundProps {\n  onConnect: (connect: boolean) => void;\n}\n\nexport function Playground({ onConnect }: PlaygroundProps) {\n  const { localParticipant } = useLocalParticipant();\n\n  const roomState = useConnectionState();\n  const tracks = useTracks();\n\n  useEffect(() => {\n    if (roomState === ConnectionState.Connected) {\n      localParticipant.setMicrophoneEnabled(true);\n    }\n  }, [localParticipant, roomState]);\n\n  const localTracks = tracks.filter(\n    ({ participant }) => participant instanceof LocalParticipant\n  );\n\n  const localMicTrack = localTracks.find(\n    ({ source }) => source === Track.Source.Microphone\n  );\n\n  const localMultibandVolume = useMultibandTrackVolume(\n    localMicTrack?.publication.track,\n    9\n  );\n\n  const audioTileContent = useMemo(() => {\n    const isLoading = roomState === ConnectionState.Connecting;\n    const isActive = !isLoading && roomState !== ConnectionState.Disconnected;\n\n    const conversationToolbar = (\n      <div className=\"w-full absolute left-1/2 top-1/2 -translate-y-1/2 -translate-x-1/2\">\n        <motion.div\n          className=\"flex justify-between gap-3 px-2\"\n          initial={{ opacity: 0, y: 25 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: 25 }}\n          transition={{\n            type: \"spring\",\n            stiffness: 260,\n            damping: 20,\n          }}\n        >\n          <MicrophoneButton\n            localMultibandVolume={localMultibandVolume}\n            isSpaceBarEnabled={true}\n          />\n          <Button\n            className=\"flex items-center justify-center px-3 rounded-[4px]\"\n            onClick={() =>\n              onConnect(roomState === ConnectionState.Disconnected)\n            }\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n            >\n              <path\n                d=\"M3.33325 3.3335L12.6666 12.6668M12.6666 3.3335L3.33325 12.6668\"\n                stroke=\"currentColor\"\n                strokeWidth=\"1.5\"\n                strokeLinecap=\"square\"\n              />\n            </svg>\n          </Button>\n        </motion.div>\n      </div>\n    );\n\n    const startConversationButton = (\n      <div className=\"absolute top-1/2 -translate-y-1/2\">\n        <motion.div\n          className=\"flex gap-3\"\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: 50 }}\n          transition={{\n            type: \"spring\",\n            stiffness: 260,\n            damping: 20,\n          }}\n        >\n          <Button\n            state=\"primary\"\n            size=\"large\"\n            className={`relative w-full text-base text-black ${isLoading ? \"pointer-events-none\" : \"\"\n              }`}\n            onClick={() =>\n              onConnect(roomState === ConnectionState.Disconnected)\n            }\n          >\n            <div\n              className={`w-full ${isLoading ? \"opacity-0\" : \"opacity-100\"}`}\n            >\n              Start voice transcription\n            </div>\n            <div\n              className={`absolute left-1/2 top-1/2 -translate-y-1/2 -translate-x-1/2 ${isLoading ? \"opacity-100\" : \"opacity-0\"\n                }`}\n            >\n              <LoadingSVG diameter={16} strokeWidth={3} />\n            </div>\n          </Button>\n        </motion.div>\n      </div>\n    );\n\n    const visualizerContent = (\n      <div className=\"flex flex-col justify-space-between h-full w-full\">\n        <div className=\"min-h-12 h-12 w-full relative\">\n          <AnimatePresence>\n            {!isActive ? startConversationButton : null}\n          </AnimatePresence>\n          <AnimatePresence>\n            {isActive ? conversationToolbar : null}\n          </AnimatePresence>\n        </div>\n      </div>\n    );\n\n    return visualizerContent;\n  }, [localMultibandVolume, roomState, onConnect]);\n\n  return (\n    <>\n      <div className=\"relative flex-col grow basis-1/2 gap-4 h-full w-full\">\n        <Teleprompter typingSpeed={25} />\n        <div className=\"absolute left-0 bottom-0 w-full bg-accent-bg border-t border-white/20 pt-2\">\n          {audioTileContent}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1095, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/hooks/use-connection.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useCallback, useState } from \"react\";\n\nconst TOKEN_ENDPOINT = \"/api/token\";\n\ntype TokenGeneratorData = {\n  shouldConnect: boolean;\n  wsUrl: string;\n  token: string;\n  disconnect: () => Promise<void>;\n  connect: () => Promise<void>;\n};\n\nconst ConnectionContext = createContext<TokenGeneratorData | undefined>(\n  undefined,\n);\n\nexport const ConnectionProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const [connectionDetails, setConnectionDetails] = useState<{\n    wsUrl: string;\n    token: string;\n    shouldConnect: boolean;\n  }>({ wsUrl: \"\", token: \"\", shouldConnect: false });\n\n  const connect = async () => {\n    if (!process.env.NEXT_PUBLIC_LIVEKIT_URL) {\n      throw new Error(\"NEXT_PUBLIC_LIVEKIT_URL is not set\");\n    }\n    const { accessToken } = await fetch(TOKEN_ENDPOINT).then((res) =>\n      res.json(),\n    );\n    setConnectionDetails({\n      wsUrl: process.env.NEXT_PUBLIC_LIVEKIT_URL,\n      token: accessToken,\n      shouldConnect: true,\n    });\n  };\n\n  const disconnect = useCallback(async () => {\n    setConnectionDetails((prev) => ({ ...prev, shouldConnect: false }));\n  }, []);\n\n  return (\n    <ConnectionContext.Provider\n      value={{\n        wsUrl: connectionDetails.wsUrl,\n        token: connectionDetails.token,\n        shouldConnect: connectionDetails.shouldConnect,\n        connect,\n        disconnect,\n      }}\n    >\n      {children}\n    </ConnectionContext.Provider>\n  );\n};\n\nexport const useConnection = () => {\n  const context = React.useContext(ConnectionContext);\n  if (context === undefined) {\n    throw new Error(\"useConnection must be used within a ConnectionProvider\");\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,iBAAiB;AAUvB,MAAM,kCAAoB,CAAA,GAAA,oUAAA,CAAA,gBAAa,AAAD,EACpC;AAGK,MAAM,qBAAqB,CAAC,EACjC,QAAQ,EAGT;IACC,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAItD;QAAE,OAAO;QAAI,OAAO;QAAI,eAAe;IAAM;IAEhD,MAAM,UAAU;QACd,uCAA0C;;QAE1C;QACA,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,MAAM,gBAAgB,IAAI,CAAC,CAAC,MACxD,IAAI,IAAI;QAEV,qBAAqB;YACnB,KAAK;YACL,OAAO;YACP,eAAe;QACjB;IACF;IAEA,MAAM,aAAa,CAAA,GAAA,oUAAA,CAAA,cAAW,AAAD,EAAE;QAC7B,qBAAqB,CAAC,OAAS,CAAC;gBAAE,GAAG,IAAI;gBAAE,eAAe;YAAM,CAAC;IACnE,GAAG,EAAE;IAEL,qBACE,6WAAC,kBAAkB,QAAQ;QACzB,OAAO;YACL,OAAO,kBAAkB,KAAK;YAC9B,OAAO,kBAAkB,KAAK;YAC9B,eAAe,kBAAkB,aAAa;YAC9C;YACA;QACF;kBAEC;;;;;;AAGP;AAEO,MAAM,gBAAgB;IAC3B,MAAM,UAAU,oUAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IACjC,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 1157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1163, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/components/room.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useMemo } from \"react\";\nimport { Room, RoomEvent, Track, LocalAudioTrack } from \"livekit-client\";\nimport { LiveKitRoom, RoomAudioRenderer } from \"@livekit/components-react\";\n\nimport { Playground } from \"@/components/playground\";\nimport { useConnection } from \"@/hooks/use-connection\";\n\nexport function RoomComponent() {\n  const { shouldConnect, wsUrl, token, connect, disconnect } = useConnection();\n\n  const handleConnect = useCallback(\n    async (c: boolean) => {\n      if (c) {\n        connect();\n      } else {\n        disconnect();\n      }\n    },\n    [connect, disconnect],\n  );\n\n  const room = useMemo(() => {\n    const r = new Room();\n    r.on(RoomEvent.LocalTrackPublished, async (trackPublication) => {\n      if (\n        trackPublication.source === Track.Source.Microphone &&\n        trackPublication.track instanceof LocalAudioTrack\n      ) {\n        const { KrispNoiseFilter, isKrispNoiseFilterSupported } = await import(\n          \"@livekit/krisp-noise-filter\"\n        );\n        if (!isKrispNoiseFilterSupported()) {\n          console.error(\n            \"Enhanced noise filter is not supported for this browser\",\n          );\n          return;\n        }\n        try {\n          await trackPublication.track?.setProcessor(KrispNoiseFilter());\n        } catch (e) {\n          void e;\n          console.warn(\"Background noise reduction could not be enabled\");\n        }\n      }\n    });\n    return r;\n  }, []);\n\n  return (\n    <LiveKitRoom\n      className=\"overflow-y-hidden w-full\"\n      serverUrl={wsUrl}\n      token={token}\n      room={room}\n      connect={shouldConnect}\n      onError={console.error}\n    >\n      <Playground onConnect={handleConnect} />\n      <RoomAudioRenderer />\n    </LiveKitRoom>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AACA;AAHA;AAAA;AAJA;;;;;;;AASO,SAAS;IACd,MAAM,EAAE,aAAa,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD;IAEzE,MAAM,gBAAgB,CAAA,GAAA,oUAAA,CAAA,cAAW,AAAD,EAC9B,OAAO;QACL,IAAI,GAAG;YACL;QACF,OAAO;YACL;QACF;IACF,GACA;QAAC;QAAS;KAAW;IAGvB,MAAM,OAAO,CAAA,GAAA,oUAAA,CAAA,UAAO,AAAD,EAAE;QACnB,MAAM,IAAI,IAAI,oOAAA,CAAA,OAAI;QAClB,EAAE,EAAE,CAAC,oOAAA,CAAA,YAAS,CAAC,mBAAmB,EAAE,OAAO;YACzC,IACE,iBAAiB,MAAM,KAAK,oOAAA,CAAA,QAAK,CAAC,MAAM,CAAC,UAAU,IACnD,iBAAiB,KAAK,YAAY,oOAAA,CAAA,kBAAe,EACjD;gBACA,MAAM,EAAE,gBAAgB,EAAE,2BAA2B,EAAE,GAAG;gBAG1D,IAAI,CAAC,+BAA+B;oBAClC,QAAQ,KAAK,CACX;oBAEF;gBACF;gBACA,IAAI;oBACF,MAAM,iBAAiB,KAAK,EAAE,aAAa;gBAC7C,EAAE,OAAO,GAAG;oBACV,KAAK;oBACL,QAAQ,IAAI,CAAC;gBACf;YACF;QACF;QACA,OAAO;IACT,GAAG,EAAE;IAEL,qBACE,6WAAC,2ZAAA,CAAA,cAAW;QACV,WAAU;QACV,WAAW;QACX,OAAO;QACP,MAAM;QACN,SAAS;QACT,SAAS,QAAQ,KAAK;;0BAEtB,6WAAC,yHAAA,CAAA,aAAU;gBAAC,WAAW;;;;;;0BACvB,6WAAC,uaAAA,CAAA,oBAAiB;;;;;;;;;;;AAGxB"}},
    {"offset": {"line": 1238, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1244, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\n\nimport { RoomComponent } from \"@/components/room\";\nimport { ConnectionProvider } from \"@/hooks/use-connection\";\n\nexport default function Home() {\n  return (\n    <ConnectionProvider>\n      <div className=\"grid place-items-center h-dvh w-full\">\n        <div className=\"w-full grid grid-rows-[64px_1fr_8px] lg:border border-white/20 h-full min-h-dvh lg:max-w-5xl mx-auto lg:min-h-[640px] lg:max-h-[640px] rounded-2xl px-4\">\n          <header className=\"border-b border-white/20\">\n            <div className=\"py-4 px-2 flex items-center justify-between\">\n              <h1 className=\"text-xl font-semibold\">Teleprompter</h1>\n              <div>\n                Built with{\" \"}\n                <a\n                  href=\"https://docs.livekit.io/agents\"\n                  className=\"pb-[1px] border-b border-white/40 hover:border-white/80 transition-all duration-75 ease-out\"\n                  target=\"_blank\"\n                >\n                  LiveKit\n                </a>\n              </div>\n            </div>\n          </header>\n          <RoomComponent />\n        </div>\n      </div>\n    </ConnectionProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AALA;;;;AAOe,SAAS;IACtB,qBACE,6WAAC,2HAAA,CAAA,qBAAkB;kBACjB,cAAA,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAO,WAAU;kCAChB,cAAA,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCAAG,WAAU;8CAAwB;;;;;;8CACtC,6WAAC;;wCAAI;wCACQ;sDACX,6WAAC;4CACC,MAAK;4CACL,WAAU;4CACV,QAAO;sDACR;;;;;;;;;;;;;;;;;;;;;;;kCAMP,6WAAC,mHAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;;;;;;AAKxB"}},
    {"offset": {"line": 1327, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}