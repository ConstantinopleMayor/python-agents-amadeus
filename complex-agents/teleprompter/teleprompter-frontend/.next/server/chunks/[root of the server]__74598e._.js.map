{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///Users/shayne/Development/Livekit/Demos/mono-demo/demo-monolith/frontends/teleprompter/app/api/token/route.ts"],"sourcesContent":["import {\n  AccessToken,\n  AccessTokenOptions,\n  VideoGrant,\n} from \"livekit-server-sdk\";\nimport { NextResponse } from \"next/server\";\n\nconst API_KEY = process.env.LIVEKIT_API_KEY;\nconst API_SECRET = process.env.LIVEKIT_API_SECRET;\nconst LIVEKIT_URL = process.env.NEXT_PUBLIC_LIVEKIT_URL;\n\nexport type ConnectionDetails = {\n  identity: string;\n  accessToken: string;\n};\n\nexport async function GET() {\n  try {\n    if (LIVEKIT_URL === undefined) {\n      throw new Error(\"LIVEKIT_URL is not defined\");\n    }\n    if (API_KEY === undefined) {\n      throw new Error(\"LIVEKIT_API_KEY is not defined\");\n    }\n    if (API_SECRET === undefined) {\n      throw new Error(\"LIVEKIT_API_SECRET is not defined\");\n    }\n\n    // Generate participant token\n    const participantIdentity = `voice_assistant_user_${Math.floor(Math.random() * 10_000)}`;\n    const roomName = `voice_assistant_room_${Math.floor(Math.random() * 10_000)}`;\n    const participantToken = await createParticipantToken(\n      { identity: participantIdentity },\n      roomName,\n    );\n\n    // Return connection details\n    const data: ConnectionDetails = {\n      identity: participantIdentity,\n      accessToken: participantToken,\n    };\n    return NextResponse.json(data);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error(error);\n      return new NextResponse(error.message, { status: 500 });\n    }\n  }\n}\n\nfunction createParticipantToken(\n  userInfo: AccessTokenOptions,\n  roomName: string,\n) {\n  const at = new AccessToken(API_KEY, API_SECRET, {\n    ...userInfo,\n    ttl: \"15m\",\n  });\n  const grant: VideoGrant = {\n    room: roomName,\n    roomJoin: true,\n    canPublish: true,\n    canPublishData: true,\n    canSubscribe: true,\n  };\n  at.addGrant(grant);\n  return at.toJwt();\n}\n"],"names":[],"mappings":";;;AAAA;AAKA;AALA;;;AAOA,MAAM,UAAU,QAAQ,GAAG,CAAC,eAAe;AAC3C,MAAM,aAAa,QAAQ,GAAG,CAAC,kBAAkB;AACjD,MAAM;AAOC,eAAe;IACpB,IAAI;QACF,IAAI,gBAAgB,WAAW;YAC7B,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,YAAY,WAAW;YACzB,MAAM,IAAI,MAAM;QAClB;QACA,IAAI,eAAe,WAAW;YAC5B,MAAM,IAAI,MAAM;QAClB;QAEA,6BAA6B;QAC7B,MAAM,sBAAsB,CAAC,qBAAqB,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS;QACxF,MAAM,WAAW,CAAC,qBAAqB,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,SAAS;QAC7E,MAAM,mBAAmB,MAAM,uBAC7B;YAAE,UAAU;QAAoB,GAChC;QAGF,4BAA4B;QAC5B,MAAM,OAA0B;YAC9B,UAAU;YACV,aAAa;QACf;QACA,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC;YACd,OAAO,IAAI,+PAAA,CAAA,eAAY,CAAC,MAAM,OAAO,EAAE;gBAAE,QAAQ;YAAI;QACvD;IACF;AACF;AAEA,SAAS,uBACP,QAA4B,EAC5B,QAAgB;IAEhB,MAAM,KAAK,IAAI,sOAAA,CAAA,cAAW,CAAC,SAAS,YAAY;QAC9C,GAAG,QAAQ;QACX,KAAK;IACP;IACA,MAAM,QAAoB;QACxB,MAAM;QACN,UAAU;QACV,YAAY;QACZ,gBAAgB;QAChB,cAAc;IAChB;IACA,GAAG,QAAQ,CAAC;IACZ,OAAO,GAAG,KAAK;AACjB"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}